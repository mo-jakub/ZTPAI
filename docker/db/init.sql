SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;


--
-- Name: authors; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.authors (
    id integer NOT NULL,
    author character varying(255) NOT NULL
);


ALTER TABLE public.authors OWNER TO docker;

--
-- Name: authors_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.authors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.authors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: book_authors; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.book_authors (
    id_book integer NOT NULL,
    id_author integer NOT NULL
);


ALTER TABLE public.book_authors OWNER TO docker;

--
-- Name: book_genres; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.book_genres (
    id_book integer NOT NULL,
    id_genre integer NOT NULL
);


ALTER TABLE public.book_genres OWNER TO docker;

--
-- Name: book_tags; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.book_tags (
    id_book integer NOT NULL,
    id_tag integer NOT NULL
);


ALTER TABLE public.book_tags OWNER TO docker;

--
-- Name: books; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.books (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    description character varying(255) NOT NULL,
    cover character varying(255) DEFAULT NULL::character varying
);


ALTER TABLE public.books OWNER TO docker;

--
-- Name: books_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.books ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: comments; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.comments (
    id integer NOT NULL,
    comment character varying(255) NOT NULL,
    date timestamp(0) without time zone NOT NULL,
    id_user integer NOT NULL,
    id_book integer NOT NULL
);


ALTER TABLE public.comments OWNER TO docker;

--
-- Name: comments_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.comments ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: doctrine_migration_versions; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.doctrine_migration_versions (
    version character varying(191) NOT NULL,
    executed_at timestamp(0) without time zone DEFAULT NULL::timestamp without time zone,
    execution_time integer
);


ALTER TABLE public.doctrine_migration_versions OWNER TO docker;

--
-- Name: genres; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.genres (
    id integer NOT NULL,
    genre character varying(100) NOT NULL
);


ALTER TABLE public.genres OWNER TO docker;

--
-- Name: genres_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.genres ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.genres_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tags; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public.tags (
    id integer NOT NULL,
    tag character varying(100) NOT NULL
);


ALTER TABLE public.tags OWNER TO docker;

--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public.tags ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user; Type: TABLE; Schema: public; Owner: docker
--

CREATE TABLE public."user" (
    id integer NOT NULL,
    email character varying(180) NOT NULL,
    roles json NOT NULL,
    password character varying(255) NOT NULL
);


ALTER TABLE public."user" OWNER TO docker;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: public; Owner: docker
--

ALTER TABLE public."user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: authors authors_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.authors
    ADD CONSTRAINT authors_pkey PRIMARY KEY (id);


--
-- Name: book_authors book_authors_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_authors
    ADD CONSTRAINT book_authors_pkey PRIMARY KEY (id_book, id_author);


--
-- Name: book_genres book_genres_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_genres
    ADD CONSTRAINT book_genres_pkey PRIMARY KEY (id_book, id_genre);


--
-- Name: book_tags book_tags_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_tags
    ADD CONSTRAINT book_tags_pkey PRIMARY KEY (id_book, id_tag);


--
-- Name: books books_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.books
    ADD CONSTRAINT books_pkey PRIMARY KEY (id);


--
-- Name: comments comments_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (id);


--
-- Name: doctrine_migration_versions doctrine_migration_versions_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.doctrine_migration_versions
    ADD CONSTRAINT doctrine_migration_versions_pkey PRIMARY KEY (version);


--
-- Name: genres genres_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.genres
    ADD CONSTRAINT genres_pkey PRIMARY KEY (id);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: user user_pkey; Type: CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);


--
-- Name: books_title_description_key; Type: INDEX; Schema: public; Owner: docker
--

CREATE UNIQUE INDEX books_title_description_key ON public.books USING btree (title, description);


--
-- Name: genres_genre_key; Type: INDEX; Schema: public; Owner: docker
--

CREATE UNIQUE INDEX genres_genre_key ON public.genres USING btree (genre);


--
-- Name: idx_1d2c02c740c5bf33; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_1d2c02c740c5bf33 ON public.book_authors USING btree (id_book);


--
-- Name: idx_1d2c02c79b986d25; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_1d2c02c79b986d25 ON public.book_authors USING btree (id_author);


--
-- Name: idx_5f9e962a40c5bf33; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_5f9e962a40c5bf33 ON public.comments USING btree (id_book);


--
-- Name: idx_5f9e962a6b3ca4b; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_5f9e962a6b3ca4b ON public.comments USING btree (id_user);


--
-- Name: idx_7621df2e40c5bf33; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_7621df2e40c5bf33 ON public.book_tags USING btree (id_book);


--
-- Name: idx_7621df2e9d2d5fd9; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_7621df2e9d2d5fd9 ON public.book_tags USING btree (id_tag);


--
-- Name: idx_813cee9b40c5bf33; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_813cee9b40c5bf33 ON public.book_genres USING btree (id_book);


--
-- Name: idx_813cee9b6dd572c8; Type: INDEX; Schema: public; Owner: docker
--

CREATE INDEX idx_813cee9b6dd572c8 ON public.book_genres USING btree (id_genre);


--
-- Name: tags_tag_key; Type: INDEX; Schema: public; Owner: docker
--

CREATE UNIQUE INDEX tags_tag_key ON public.tags USING btree (tag);


--
-- Name: uniq_identifier_email; Type: INDEX; Schema: public; Owner: docker
--

CREATE UNIQUE INDEX uniq_identifier_email ON public."user" USING btree (email);


--
-- Name: book_authors fk_1d2c02c740c5bf33; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_authors
    ADD CONSTRAINT fk_1d2c02c740c5bf33 FOREIGN KEY (id_book) REFERENCES public.books(id);


--
-- Name: book_authors fk_1d2c02c79b986d25; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_authors
    ADD CONSTRAINT fk_1d2c02c79b986d25 FOREIGN KEY (id_author) REFERENCES public.authors(id);


--
-- Name: comments fk_5f9e962a40c5bf33; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT fk_5f9e962a40c5bf33 FOREIGN KEY (id_book) REFERENCES public.books(id);


--
-- Name: comments fk_5f9e962a6b3ca4b; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT fk_5f9e962a6b3ca4b FOREIGN KEY (id_user) REFERENCES public."user"(id);


--
-- Name: book_tags fk_7621df2e40c5bf33; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_tags
    ADD CONSTRAINT fk_7621df2e40c5bf33 FOREIGN KEY (id_book) REFERENCES public.books(id);


--
-- Name: book_tags fk_7621df2e9d2d5fd9; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_tags
    ADD CONSTRAINT fk_7621df2e9d2d5fd9 FOREIGN KEY (id_tag) REFERENCES public.tags(id);


--
-- Name: book_genres fk_813cee9b40c5bf33; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_genres
    ADD CONSTRAINT fk_813cee9b40c5bf33 FOREIGN KEY (id_book) REFERENCES public.books(id);


--
-- Name: book_genres fk_813cee9b6dd572c8; Type: FK CONSTRAINT; Schema: public; Owner: docker
--

ALTER TABLE ONLY public.book_genres
    ADD CONSTRAINT fk_813cee9b6dd572c8 FOREIGN KEY (id_genre) REFERENCES public.genres(id);